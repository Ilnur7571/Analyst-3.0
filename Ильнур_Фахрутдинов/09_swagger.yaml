openapi: 3.0.3
info:
  title: AI Agent for User Story Analysis API
  description: API для анализа User Story по критериям INVEST с использованием AI
  version: 1.0.0
  contact:
    name: INVEST_bot


servers:
  - url: https://api.telegram.org/bot{BOT_TOKEN}
    description: Telegram Bot API

tags:
  - name: Health
    description: Проверка работоспособности сервиса
  - name: Analysis
    description: Анализ User Story по критериям INVEST
  - name: Database
    description: Работа с базой данных примеров

paths:
  /ping:
    get:
      tags:
        - Health
      summary: Проверка доступности сервиса
      description: Проверяет, что сервис работает и доступен
      security: []  # Без аутентификации
      responses:
        '200':
          description: Сервис доступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /analyze:
    post:
      tags:
        - Analysis
      summary: Анализ User Story по критериям INVEST
      description: Анализирует User Story с использованием AI и возвращает оценку по критериям INVEST
      security:
        - ApiKeyAuth: []  # Требует API-ключ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisRequest'
      responses:
        '200':
          description: Успешный анализ User Story
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResponse'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Ошибка валидации данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: Сервис временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /examples:
    get:
      tags:
        - Database
      summary: Получить примеры User Story из базы данных
      description: Возвращает список примеров User Story с их анализом
      security:
        - ApiKeyAuth: []  # Требует API-ключ
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
          description: Количество возвращаемых примеров
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
          description: Смещение для пагинации
      responses:
        '200':
          description: Список примеров успешно получен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamplesResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /examples/search:
    get:
      tags:
        - Database
      summary: Поиск похожих User Story в базе данных
      description: Ищет похожие User Story в базе данных по тексту запроса
      security:
        - ApiKeyAuth: []  # Требует API-ключ
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
          description: Текст User Story для поиска похожих примеров
        - name: threshold
          in: query
          schema:
            type: number
            format: float
            minimum: 0
            maximum: 1
            default: 0.75
          description: Порог схожести (от 0 до 1)
      responses:
        '200':
          description: Результаты поиска
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    HealthResponse:
      type: object
      properties:
        ok:
          type: boolean
          example: true
          description: Признак доступности сервиса
        timestamp:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
          description: Время проверки
        version:
          type: string
          example: "1.0.0"
          description: Версия API

    AnalysisRequest:
      type: object
      required:
        - user_story
      properties:
        user_story:
          type: string
          example: "Как пользователь, я хочу зарегистрироваться в системе, чтобы получить доступ к персонализированному контенту"
          description: Текст User Story для анализа в формате "Как <роль>, я хочу <действие>, чтобы <цель>"
        use_cache:
          type: boolean
          default: true
          description: Использовать кэш и поиск в базе данных

    AnalysisResponse:
      type: object
      properties:
        overall_verdict:
          type: string
          enum: [Хорошо, Средне, Плохо]
          example: "Хорошо"
          description: Общая оценка User Story
        overall_score:
          type: integer
          minimum: 0
          maximum: 100
          example: 85
          description: Оценка в баллах (0-100)
        criteria:
          type: object
          properties:
            Independent:
              type: boolean
              example: true
              description: Соответствие критерию Independent (независимость)
            Negotiable:
              type: boolean
              example: true
              description: Соответствие критерию Negotiable (обсуждаемость)
            Valuable:
              type: boolean
              example: true
              description: Соответствие критерию Valuable (ценность)
            Estimable:
              type: boolean
              example: true
              description: Соответствие критерию Estimable (оцениваемость)
            Small:
              type: boolean
              example: true
              description: Соответствие критерию Small (малый размер)
            Testable:
              type: boolean
              example: true
              description: Соответствие критерию Testable (тестируемость)
        recommendations:
          type: array
          items:
            type: string
          example: ["Уточнить, какой именно персонализированный контент будет доступен", "Добавить критерии приемки для тестирования"]
          description: Список рекомендаций по улучшению User Story
        similar_stories_found:
          type: boolean
          example: false
          description: Найдены ли похожие истории в базе данных
        used_cached_result:
          type: boolean
          example: false
          description: Использован ли результат из кэша/базы данных
        analysis_id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
          description: Уникальный идентификатор анализа

    ExamplesResponse:
      type: object
      properties:
        examples:
          type: array
          items:
            $ref: '#/components/schemas/UserStoryExample'
        total_count:
          type: integer
          example: 150
          description: Общее количество примеров в базе
        has_more:
          type: boolean
          example: true
          description: Есть ли еще примеры для загрузки

    UserStoryExample:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: Уникальный идентификатор примера
        query:
          type: string
          example: "Как пользователь, я хочу зарегистрироваться через электронную почту, чтобы иметь возможность войти позже"
          description: Оригинальный текст User Story
        answer:
          type: string
          example: "Хорошо: соответствует критериям INVEST"
          description: Результат анализа
        normalized_query:
          type: string
          example: "как пользователь я хочу зарегистрироваться через электронную почту чтобы иметь возможность войти позже"
          description: Нормализованный текст для поиска

    SearchResponse:
      type: object
      properties:
        similar_stories:
          type: array
          items:
            $ref: '#/components/schemas/SimilarStory'
        query:
          type: string
          example: "Как пользователь, я хочу зарегистрироваться"
          description: Исходный запрос для поиска
        threshold:
          type: number
          format: float
          example: 0.75
          description: Использованный порог схожести
        total_found:
          type: integer
          example: 3
          description: Количество найденных похожих историй

    SimilarStory:
      type: object
      properties:
        story:
          type: string
          example: "Как пользователь, я хочу зарегистрироваться через электронную почту, чтобы иметь возможность войти позже"
          description: Текст похожей User Story
        analysis:
          type: string
          example: "Хорошо: соответствует критериям INVEST"
          description: Результат анализа похожей истории
        similarity_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          example: 0.89
          description: Коэффициент схожести (0-1)

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Invalid request"
          description: Тип ошибки
        message:
          type: string
          example: "User story text is required"
          description: Сообщение об ошибке
        timestamp:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
          description: Время возникновения ошибки

    ValidationError:
      type: object
      properties:
        detail:
          type: array
          items:
            type: object
            properties:
              loc:
                type: array
                items:
                  type: string
                example: ["body", "user_story"]
              msg:
                type: string
                example: "field required"
              type:
                type: string
                example: "value_error.missing"

securitySchemes:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-API-Key
    description: Секретный API-ключ для доступа к защищенным endpoint'ам